import io
import os
import pypose as pp
import torch
import urllib

import logging

logger = logging.getLogger(__name__)


def fetch_epfl_example():
    # load epfl's mat file
    test_mat_url = 'https://github.com/cvlab-epfl/EPnP/raw/master/matlab/data/input_data_noise.mat'
    tmp_path = '/tmp/pypose_test/input_data_noise.mat'
    os.makedirs(os.path.dirname(tmp_path), exist_ok=True)
    if not os.path.exists(tmp_path):
        urllib.request.urlretrieve(test_mat_url, tmp_path)
    assert os.path.exists(tmp_path), 'download testing mat failed'
    return tmp_path

sample_binary = b'PK\x03\x04\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00\x0e\x00epfl_sample/data.pklFB\n\x00ZZZZZZZZZZ\x80\x02}q\x00(X\x06\x00\x00\x00camPtsq\x01ctorch._utils\n_rebuild_tensor_v2\nq\x02((X\x07\x00\x00\x00storageq\x03ctorch\nDoubleStorage\nq\x04X\x01\x00\x00\x000q\x05X\x03\x00\x00\x00cpuq\x06K\x96tq\x07QK\x00K2K\x03K\x01\x87q\x08K\x03K\x01K\x01\x87q\t\x89ccollections\nOrderedDict\nq\n)Rq\x0btq\x0cRq\rX\t\x00\x00\x00Ximg_trueq\x0eh\x02((h\x03h\x04X\x01\x00\x00\x001q\x0fh\x06K\x96tq\x10QK\x00K2K\x03K\x01\x87q\x11K\x03K\x01K\x01\x87q\x12\x89h\n)Rq\x13tq\x14Rq\x15X\x0b\x00\x00\x00imgPts_trueq\x16h\x02((h\x03h\x04X\x01\x00\x00\x002q\x17h\x06Kdtq\x18QK\x00K2K\x02K\x01\x87q\x19K\x02K\x01K\x01\x87q\x1a\x89h\n)Rq\x1btq\x1cRq\x1dX\x04\x00\x00\x00Ximgq\x1eh\x02((h\x03h\x04X\x01\x00\x00\x003q\x1fh\x06K\x96tq QK\x00K2K\x03K\x01\x87q!K\x03K\x01K\x01\x87q"\x89h\n)Rq#tq$Rq%X\x06\x00\x00\x00imgPtsq&h\x02((h\x03h\x04X\x01\x00\x00\x004q\'h\x06Kdtq(QK\x00K2K\x02K\x01\x87q)K\x02K\x01K\x01\x87q*\x89h\n)Rq+tq,Rq-X\x06\x00\x00\x00objPtsq.h\x02((h\x03h\x04X\x01\x00\x00\x005q/h\x06K\x96tq0QK\x00K2K\x03K\x01\x87q1K\x03K\x01K\x01\x87q2\x89h\n)Rq3tq4Rq5X\x06\x00\x00\x00camMatq6h\x02((h\x03ctorch\nLongStorage\nq7X\x01\x00\x00\x006q8h\x06K\ttq9QK\x00K\x03K\x03\x86q:K\x01K\x03\x86q;\x89h\n)Rq<tq=Rq>X\x02\x00\x00\x00Rtq?h\x02((h\x03h\x04X\x01\x00\x00\x007q@h\x06K\x10tqAQK\x00K\x04K\x04\x86qBK\x01K\x04\x86qC\x89h\n)RqDtqERqFu.PK\x07\x08\x96c\xe9\x0e\xa8\x02\x00\x00\xa8\x02\x00\x00PK\x03\x04\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\x00\x18\x00epfl_sample/data/0FB\x14\x00ZZZZZZZZZZZZZZZZZZZZ\xc0~\xfc\x94\xde\xac\xec\xbf`\xcc\xf3\xf7\x99\x16\xad\xbf\xb2@\xd7\x18J-\x18@\x1ac\x02\xdc\x04(\xe2\xbfRg`\x01\x9c|\xfb?\x0e\x8f=\x0f\x88\x01\x1a@\x84:\xb1\xb0m,\xf2?Xt\xf5\x01KD\xfb\xbf\xc8Ki\x1aP\xce\x1a@\xe0"{\xc3k\x8e\xb2\xbf\xe0\xf8\x13\xdd\xc2\x9f\xeb?\'\xcc\xed-\xc0\xd6\x1a@\x8cu]\xdbJ\xfd\xf9?p\xd5L\xcb\xc4\xf0\xe2?\x16\xd0\x99\x9a\xf8\x88!@\x80\xd3\xc8\x85\xdf\xc1\xe5?0\x16\xd1}\x11\xb7\xf7\xbf\xf2\x9a\xaeN#\xa2 @f\xdbH~\x95b\xfd\xbf\xc8g \xa2\x80\xbf\xeb\xbf\xc1\xc8w;y\xb4\x14@\xd6~\xca\xa6\xd4\xe0\xf6?\x94.f\xfd\x1e\xc4\xd8\xbf\xbf\xf2\x9bqM\'\x15@@\xb4\xc38\t2\xd1?Lw)4-\xe4\xfe?Q\x1cL\x8a\xcf\xc1\x1d@\x18>\x95\x0eI\xe8\xe2\xbf\x00\x94\xaa\xfd\xbdpo?\xb4\xfe>\xd4\x17\xca\x19@\xd8\xf1\xa3#A\xf0\xeb?p\xc7\x08 7q\xc2\xbf\x99\xfd\x14\xda\x103 @\x18\xa2\xb4\x91@I\xfd?\\\xdc\x02\x81\x19\xa5\xe7\xbf\x82\xef\xf5\x11x\xb7\x1b@p\xb2\xd7[\xa8\x99\xf1?\xcb\xc51\x95]0\xf1\xbfAQ\xf79\x81\x04\x12@\xf8rx8a\xec\xda\xbf\x00\xfd\x03E\xbef\x99?\n\x9b\x9fAHh @\xbcrb\x9a\x15:\xf8\xbfucp\xe3:\xe2\xfc\xbf\xac\xdb\x9bA\x1b&!@\xd0\xb6?Yp\xff\xcb?b\xd5T\xfd\xa0\x0f\xfe\xbfx\x0c\xa7\xf8@\xe9 @pxwy\xa9\xee\xd0?\xb4\xd3\x18\xa2\xe9\x97\xfd?\x8aL\x01\x8d[\xe3\x1f@>\xb3\xafV\xab\x89\xf8?\x0c\x81\xbaq\x8bs\xf3\xbfTE\xc8u\xaa\x1e\x1f@\xf2\x99\x8f\xa5\x1c\x0c\xfc?\xdc\x1a\xfc\xc6;\xda\xdc\xbf\x96xe\x14dp\x16@\xe8\x8d\xa8\x10|\xca\xfc\xbfx\xd7*Y\x83\xb2\xe2\xbf\xbcjS\xdb\xfa\xd3!@2~\x88D\x1b6\xff?&\x81F,S\xb1\xff\xbfE\xfd?Ru\x05\x1b@\xa6E-\x8f\x9c\xe9\xe6\xbfNp\xb2=Z\x03\xec\xbf\xf8\xea\xca\xa0fC\x1c@\\\xbb\xad\xac\x97\x04\xe7?\xd0V\xb96\xb4\xa5\xe6?\xe9\xab\xb0\xa9|-\x16@\x0e\x0b\x03\x9el\x97\xf6\xbf\x98\x9e\x1ar\x06\xa1\xe8\xbf\x0cu\xe9\xce\xe7R\x16@@Qj\xa7m\x9a\xf3?@-\xce\x1a\xf5\xf4\xb8\xbf\x99\xe2!\xa1\xd2\x02\x1a@N$>\x17os\xf4?\x18GU\x97%\xe8\xd3\xbf\xce\x07\xfc\x85\x0c\xcb\x14@\xea\xa6\x10|\x8af\xf2\xbfzA\x12\xc1\xeb\x8e\xe0\xbf\xcc\xad<|\xcb9!@\\\xd50\xf8\xf0\x99\xf7\xbf\x80\xb7\xe9?\x97\x0b\xaf?>o\xaa\xdc\xe0\x1f\x14@0bL\xc9\x80\x8b\xe8?\x84\x11o\x08\x9c9\xf8?\x85\x91V|/P\x1a@\x10\x97\x8a!\x89+\xe2?\x9c\xfch\x0b\xc1X\xd1\xbf\xf4K\xe1\xa3\xf7k\x1e@F\xd2R\x044\xce\xfc?D\xd0\xed\x8f\xd5\xc7\xf0?\x1e\x99\xa3\xee\xf1\xbb\x1e@t]\xe8\xf3f\x89\xf2\xbf|c+\xda\x16\x19\xff\xbf~[\xe5S(r!@ph\xc36\x14B\xcb?\xccB\x8d\x9f\x9eg\xec\xbfr\xf4\xf9\x85k\xc6!@\xcf\x03\x91@\xb3\x8f\xff\xbf\xbc\x8c\xd0d\x93\xb9\xfc\xbfd\xf2+\xe6\x045\x1e@\xdaQS^\xe4\xdf\xfb\xbf\xe4\xea^#p\xa6\xe0?\x9f\xc88\x94\xb3a\x1d@`\xd1\xf4\xf6H%\xbb?\xcc\xf7T6O\x94\xed?X\xe0\xb1\x99\x80\xe2\x1f@\xc2!t\xc3\x1a\xfb\xe4\xbfF\x96\x88Uc\xc0\xf6?\x8f/\x83|B\x95\x1c@\xb2m\x7fO\xa4B\xfb\xbf\x97W\xf8.3\x99\xf1\xbfD\xf0\xbb\xdeB\x99\x1c@6j\x8a\xba\x8f\xb5\xf3\xbf\xa4\x1amV\xb4S\xe9\xbf\xdb\x98\xfaJ2\xf7\x16@(\xb9\xb6_9\xfa\xfb\xbf \x05\x904\xf7#\xd7?b\xfa\xa1\x05I4 @\xae\'\xfb\x11\x1d\x06\xe5\xbf\xcc\xe6\xff\xaa\x17\xcc\xeb?\xe2\xd2\xab\xd7=\xcc\x1c@\x9c\xdf9\xdf\x87t\xd1\xbf\xee\xc0\\!\xeb\x81\xf6?\xa2\xae^\xf9c\x9b\x1b@\xfcgjN\xae\xf9\xf6\xbf(H Z\'\xc7\xd8\xbf\x0c\'n\x90\r\x98!@8*A?9\x1c\xe1\xbf\xa4.d\xbesF\xfc\xbf\x0c\x84\xc3\x0bg[\x1b@\xf0x\x9e\x04J&\xfe?,\x01A\xe3\x1d\x82\xf6\xbfZ\xcf\xab\xa9\x03\x03\x19@\xeeI\x91\xecb\xf2\xfe\xbf\xdb\xb2\xd1\xdc\xa5\xa0\xfe\xbf\xaa\xdc\xefUI\xb6!@H\xdal+\x90\xda\xdf?\x1c\x05\x91&\xb2\xbd\xee?\x84\xcd\n\xfd\xf7b\x1f@\x82{\xfc\x07t\xcd\xf2\xbf\x88\xa8\xaf&\x97\x05\xdb\xbf\xcc\x10\x95\x13\xb4\x92\x1a@\x10o\xa7]\x13\x8b\xf9?\xf6-L\xb2\xa0$\xf0?o\x9ba;\xdd\xba\x1c@\xf0V\xae\xb4\x00\x8a\xf9?P\x08j,\xec\xd2\xb5\xbf\xff\xf9\xd9\xf6\xaa\xc3\x13@PK\x07\x08\xf1\x1c1\x86\xb0\x04\x00\x00\xb0\x04\x00\x00PK\x03\x04\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\x00\x10\x00epfl_sample/data/1FB\x0c\x00ZZZZZZZZZZZZ0\t\xe8\x89\x9b,i@D\x05\x96\x11_\x0fm@\x00\x00\x00\x00\x00\x00\xf0?\xdd\x15\xb3\xb8\xe3Eo@\x00\xf1\xb7\x0256|@\x00\x00\x00\x00\x00\x00\xf0?/W]`\x7fy|@L\xf9\xebp\xdfGB@\x00\x00\x00\x00\x00\x00\xf0?~\xe9\x99p\xb8us@\xc0\xb0\xee>\xcfnu@\x00\x00\x00\x00\x00\x00\xf0?}\x85 XmC}@\xf5\xd36\x05\x1f`r@\x00\x00\x00\x00\x00\x00\xf0?\xc8\xd7\xbefq\x16x@\xefD\xb3Z([X@\x00\x00\x00\x00\x00\x00\xf0?\xd2\xa7\xd4\x18\xbf\x13B@\x86c\x8b\xba\xf3~Z@\x00\x00\x00\x00\x00\x00\xf0?\xb1+%\x17t\xc2\x80@i\xda5\x07\xc1\xaef@\x00\x00\x00\x00\x00\x00\xf0?\xaa@\xf0\xf0I\xceu@\xe8\xcc;5\xf9\xf9{@\x00\x00\x00\x00\x00\x00\xf0?;L.a\xf0\xd5n@\xba\xdb\xe8.=\x0fn@\x00\x00\x00\x00\x00\x00\xf0?\xaa\xef\x85-\xb9cy@\xe2\x8d\xa6\x02\x9f8l@\x00\x00\x00\x00\x00\x00\xf0?\x7f[\x15\xbb\x99\x9a\x80@\xc7\xfc\xe5\xac\x19Vc@\x00\x00\x00\x00\x00\x00\xf0?ux\x92\xc0\xef\x1a\x80@\xe7\xfb\xc7wf\x99H@\x00\x00\x00\x00\x00\x00\xf0?w\xa2^\x82\xa0oq@=rl\x8dhMn@\x00\x00\x00\x00\x00\x00\xf0?EJ\xb2c:Wf@\xdd\x04n\xb1\x84\xe4Q@\x00\x00\x00\x00\x00\x00\xf0?\x02\x7f \xd9\x1dKu@\'\xbeI1\xe0\x1eO@\x00\x00\x00\x00\x00\x00\xf0?\x98\nO\xc5\xca\xa8u@\xb2t\x0ec\xb9\x99z@\x00\x00\x00\x00\x00\x00\xf0?\xe9I\xd7d.\xdb}@\xa7\xe5\xeeLd\xbf\\@\x00\x00\x00\x00\x00\x00\xf0?\xb2\xec}"\xe5\xcf\x81@\xf5T!\x80\xb1\xf6e@\x00\x00\x00\x00\x00\x00\xf0?\xd4\xcfb\x8d=\xd0c@o@\x89|\xfcqg@\x00\x00\x00\x00\x00\x00\xf0?Ym\xf3.\x1a8\x81@U2\xf4\xc6\xdf\xb2\x15@\x00\x00\x00\x00\x00\x00\xf0?\n\xd6\xb9\x0b\xd1\xddm@\x96\xce\xdf\xa0S\x9ca@\x00\x00\x00\x00\x00\x00\xf0?@\x1fG\xb3\x9e|z@AU\xab\x01\xe1au@\x00\x00\x00\x00\x00\x00\xf0?{O\\\xd9\x88f]@\x16\xc1/\x9e\x915`@\x00\x00\x00\x00\x00\x00\xf0?,C\xe7\xe2\xaek}@;\xc8\xaa\x036\x80l@\x00\x00\x00\x00\x00\x00\xf0?a\xdcu+\xaa%\x80@`\xb8n\xbf3\x04h@\x00\x00\x00\x00\x00\x00\xf0?\xac\x8a\x9a\xea\xc2\xa5j@\xb2M\xcfz\xff\xfdg@\x00\x00\x00\x00\x00\x00\xf0?\x9f0\x11\x81\x9c\\U@#r<"\x884o@\x00\x00\x00\x00\x00\x00\xf0?O\x80\xdf9z\xd4y@\x8bE=9\r\x82z@\x00\x00\x00\x00\x00\x00\xf0?dT\xba\xa7\xa2\xbbw@\xd7F\x9a.\xaboj@\x00\x00\x00\x00\x00\x00\xf0?\x986\xc0@0\xb7\x7f@\x96\x1b}\x8f,\xd3u@\x00\x00\x00\x00\x00\x00\xf0?k\x99\xf3\xdc\xeb\xb7j@\x8cOB\x10\x88\xdfN@\x00\x00\x00\x00\x00\x00\xf0?L\xb0\xa1O\xb32u@y\x11\xf2\xd6.\x03d@\x00\x00\x00\x00\x00\x00\xf0?\x86*4\xe5(\xc2[@\x8e|\x0c\xb4#\xe8H@\x00\x00\x00\x00\x00\x00\xf0?\x0f\x1d\x98/FH`@\x01\xb5\xceQ\xb2\x8ar@\x00\x00\x00\x00\x00\x00\xf0?\x159[\xfdE\xaat@\x14\x83?\xb6O\xcct@\x00\x00\x00\x00\x00\x00\xf0?*,\xc4\xc9\x18\xd3n@\x834\xe1S"\xf3x@\x00\x00\x00\x00\x00\x00\xf0?J5\r\x9e\x81+`@\xcb\xce\x1epi;]@\x00\x00\x00\x00\x00\x00\xf0?bs\xd6Z{\x8bb@`\xed\xd4\x99\xf86`@\x00\x00\x00\x00\x00\x00\xf0?~\x96\x9c\xcc\tkb@\xe0)\x8f}8;q@\x00\x00\x00\x00\x00\x00\xf0?\xaf_\xb7\x15\xd6\xdfn@\xc5u[jh\x08u@\x00\x00\x00\x00\x00\x00\xf0?0n#/.\x06r@\xed[\xdfD\xe70y@\x00\x00\x00\x00\x00\x00\xf0?\x87\x97\x0b+<\xadg@!\x08\xa6\xccW\x99i@\x00\x00\x00\x00\x00\x00\xf0?e@\xe0\xddJ\x17p@C`\x0b\xc3\xce\xa4@@\x00\x00\x00\x00\x00\x00\xf0?\x10[\x07\xf6\xa9\x88\x81@7]\xd5%b\x02N@\x00\x00\x00\x00\x00\x00\xf0?\x08DR\x1b\xe7(b@\x12$[D-\xc5P@\x00\x00\x00\x00\x00\x00\xf0?\x80\xb53K\xe8+w@rb\x06\xdc\x16\x1fu@\x00\x00\x00\x00\x00\x00\xf0?\xbb\x01\x1b\xce}Of@Y\x1cN\x7f\xfa\xa4g@\x00\x00\x00\x00\x00\x00\xf0?\x18\xbc\x95\xc8\x0f\x1d\x7f@HT\x9e\xa1\x0c\x06v@\x00\x00\x00\x00\x00\x00\xf0?\\\xb7\r\x06}\x13\x82@8\xdf\x14*QFl@\x00\x00\x00\x00\x00\x00\xf0?PK\x07\x085\x80y\x04\xb0\x04\x00\x00\xb0\x04\x00\x00PK\x03\x04\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\x00\x10\x00epfl_sample/data/2FB\x0c\x00ZZZZZZZZZZZZ0\t\xe8\x89\x9b,i@D\x05\x96\x11_\x0fm@\xdd\x15\xb3\xb8\xe3Eo@\x00\xf1\xb7\x0256|@/W]`\x7fy|@L\xf9\xebp\xdfGB@~\xe9\x99p\xb8us@\xc0\xb0\xee>\xcfnu@}\x85 XmC}@\xf5\xd36\x05\x1f`r@\xc8\xd7\xbefq\x16x@\xefD\xb3Z([X@\xd2\xa7\xd4\x18\xbf\x13B@\x86c\x8b\xba\xf3~Z@\xb1+%\x17t\xc2\x80@i\xda5\x07\xc1\xaef@\xaa@\xf0\xf0I\xceu@\xe8\xcc;5\xf9\xf9{@;L.a\xf0\xd5n@\xba\xdb\xe8.=\x0fn@\xaa\xef\x85-\xb9cy@\xe2\x8d\xa6\x02\x9f8l@\x7f[\x15\xbb\x99\x9a\x80@\xc7\xfc\xe5\xac\x19Vc@ux\x92\xc0\xef\x1a\x80@\xe7\xfb\xc7wf\x99H@w\xa2^\x82\xa0oq@=rl\x8dhMn@EJ\xb2c:Wf@\xdd\x04n\xb1\x84\xe4Q@\x02\x7f \xd9\x1dKu@\'\xbeI1\xe0\x1eO@\x98\nO\xc5\xca\xa8u@\xb2t\x0ec\xb9\x99z@\xe9I\xd7d.\xdb}@\xa7\xe5\xeeLd\xbf\\@\xb2\xec}"\xe5\xcf\x81@\xf5T!\x80\xb1\xf6e@\xd4\xcfb\x8d=\xd0c@o@\x89|\xfcqg@Ym\xf3.\x1a8\x81@U2\xf4\xc6\xdf\xb2\x15@\n\xd6\xb9\x0b\xd1\xddm@\x96\xce\xdf\xa0S\x9ca@@\x1fG\xb3\x9e|z@AU\xab\x01\xe1au@{O\\\xd9\x88f]@\x16\xc1/\x9e\x915`@,C\xe7\xe2\xaek}@;\xc8\xaa\x036\x80l@a\xdcu+\xaa%\x80@`\xb8n\xbf3\x04h@\xac\x8a\x9a\xea\xc2\xa5j@\xb2M\xcfz\xff\xfdg@\x9f0\x11\x81\x9c\\U@#r<"\x884o@O\x80\xdf9z\xd4y@\x8bE=9\r\x82z@dT\xba\xa7\xa2\xbbw@\xd7F\x9a.\xaboj@\x986\xc0@0\xb7\x7f@\x96\x1b}\x8f,\xd3u@k\x99\xf3\xdc\xeb\xb7j@\x8cOB\x10\x88\xdfN@L\xb0\xa1O\xb32u@y\x11\xf2\xd6.\x03d@\x86*4\xe5(\xc2[@\x8e|\x0c\xb4#\xe8H@\x0f\x1d\x98/FH`@\x01\xb5\xceQ\xb2\x8ar@\x159[\xfdE\xaat@\x14\x83?\xb6O\xcct@*,\xc4\xc9\x18\xd3n@\x834\xe1S"\xf3x@J5\r\x9e\x81+`@\xcb\xce\x1epi;]@bs\xd6Z{\x8bb@`\xed\xd4\x99\xf86`@~\x96\x9c\xcc\tkb@\xe0)\x8f}8;q@\xaf_\xb7\x15\xd6\xdfn@\xc5u[jh\x08u@0n#/.\x06r@\xed[\xdfD\xe70y@\x87\x97\x0b+<\xadg@!\x08\xa6\xccW\x99i@e@\xe0\xddJ\x17p@C`\x0b\xc3\xce\xa4@@\x10[\x07\xf6\xa9\x88\x81@7]\xd5%b\x02N@\x08DR\x1b\xe7(b@\x12$[D-\xc5P@\x80\xb53K\xe8+w@rb\x06\xdc\x16\x1fu@\xbb\x01\x1b\xce}Of@Y\x1cN\x7f\xfa\xa4g@\x18\xbc\x95\xc8\x0f\x1d\x7f@HT\x9e\xa1\x0c\x06v@\\\xb7\r\x06}\x13\x82@8\xdf\x14*QFl@PK\x07\x08\xa3\xd5\xe4\x82 \x03\x00\x00 \x03\x00\x00PK\x03\x04\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\x00 \x00epfl_sample/data/3FB\x1c\x00ZZZZZZZZZZZZZZZZZZZZZZZZZZZZ7\xd97\x1a\x90\xc0i@\x88\xe85\x82\xfa|l@\x00\x00\x00\x00\x00\x00\xf0?\'\xac\xbd\xf1r\xbao@\xb2\xc8\xa3Vn\xfd|@\x00\x00\x00\x00\x00\x00\xf0?#q\x17\xca\x01)}@\xac]t\xb5\x86T7@\x00\x00\x00\x00\x00\x00\xf0?~~\xc5\x1c\xdd\xc6s@\xe4\xb9\x86\x99\xd80v@\x00\x00\x00\x00\x00\x00\xf0?\xcdO\xab\x12\xfe\xbc|@M\x1e\x93\x94\xba`r@\x00\x00\x00\x00\x00\x00\xf0?\xbfl\x0b\x17Z>x@\xb8/\x168\x14\x80V@\x00\x00\x00\x00\x00\x00\xf0?G\xc5K\x06:1A@\xd3\x95\xbeE\xb6\x08\\@\x00\x00\x00\x00\x00\x00\xf0?g\xcd\x97x\xaf\xb6\x80@\xe0"}\x88\xcbTf@\x00\x00\x00\x00\x00\x00\xf0?\x93\xf7P\xc1\t\x8ct@\t\xa8D\x17+\xd9{@\x00\x00\x00\x00\x00\x00\xf0?\x88G\xa7\x1av\xefn@\xfd\xb6\x8e\xc4\xc0On@\x00\x00\x00\x00\x00\x00\xf0?\xb5\xac\x1e\xf6\xd0\x9dy@b\xe2\xeaF\x0e+l@\x00\x00\x00\x00\x00\x00\xf0?\x85W2\xa2\xbc\x93\x80@D\x97\x00\xf3\x0b4b@\x00\x00\x00\x00\x00\x00\xf0?Xe!\xf7\xdc\xd6~@C8\x19\xb9\xba\xd5;@\x00\x00\x00\x00\x00\x00\xf0?\xa0A\x8b\x10M\x81q@-\x83v\x06\xcb\x15m@\x00\x00\x00\x00\x00\x00\xf0?\x86\x9e\xe0\x1c\x8b\xa7f@\xe0{\xddiBnN@\x00\x00\x00\x00\x00\x00\xf0?\xba\xbc\xb2\xf8B\x07v@N2\xcb\x92\xd6{N@\x00\x00\x00\x00\x00\x00\xf0?\x9b\xb2\xde\x19\x8b\x00u@\xb5\xd6\xe6\x1b\xe5\xbay@\x00\x00\x00\x00\x00\x00\xf0?\x9a\x93\xe74\xa4\x93}@\xe20&G\xf8\x9cZ@\x00\x00\x00\x00\x00\x00\xf0?\xb2\x0bBI\x01\xfd\x81@\t8\x97\x8b\xab\x9cf@\x00\x00\x00\x00\x00\x00\xf0?\xa5/ \x054\xaeb@k\xc4U\xdd\xe4\xdei@\x00\x00\x00\x00\x00\x00\xf0?\xea70\xa3\x16\x9f\x80@\x80\x06b\xe4)\xcb\xbc?\x00\x00\x00\x00\x00\x00\xf0?\x0ff]\xb4\xb4\xdfk@\xd1\xec\nn\xf6\xfdd@\x00\x00\x00\x00\x00\x00\xf0?\x07%\xb2Y\xdbDy@\xba\x8c\xe7\xe6\x06\xa1t@\x00\x00\x00\x00\x00\x00\xf0?u\x8b\x1a\xa0\xe0\xecZ@\x86&FeK\xd4`@\x00\x00\x00\x00\x00\x00\xf0?\xe2\xaa\xc5l)\xd4}@\xf0\xe6\xbdV\x0f(o@\x00\x00\x00\x00\x00\x00\xf0?\xf7kp\x88\xbd3\x80@\xdb\xc0\xf5\xab\xdd\xfbh@\x00\x00\x00\x00\x00\x00\xf0?!\x87\xa4\xb9\xc0\xe0i@H\x1aL\x95\x7fEg@\x00\x00\x00\x00\x00\x00\xf0?\xb1\xc0\xa1E\xce\x14Q@d\x17\xa6\xdb\xb6\xe0o@\x00\x00\x00\x00\x00\x00\xf0?\x9e\x15\x8a5\xa1Pz@\x1a\xef(\xd8\xee\x99y@\x00\x00\x00\x00\x00\x00\xf0?\x98\xb0\xb0T\xcb\xe7w@\xb6V\xe2\xb2\xf4\xa0j@\x00\x00\x00\x00\x00\x00\xf0?\t\xe4\x074\xa0\xa1~@\xc5\xa7\xe3\xd5\xd6\xf4u@\x00\x00\x00\x00\x00\x00\xf0?\xbd\x9cv+;Qk@\x11PU\x9a~\x88F@\x00\x00\x00\x00\x00\x00\xf0?j\xc4\xebjTru@\xb0\xf4\x05\x01}[c@\x00\x00\x00\x00\x00\x00\xf0?\x08\x05\xdaX\xcfrY@\xbd\xb4\xce:\x9fAM@\x00\x00\x00\x00\x00\x00\xf0?(^v~\xcc\x9a_@~\xe4\xe2\xd9K\xe2q@\x00\x00\x00\x00\x00\x00\xf0?d\xe8\xcdv\xf6\x04t@\x8ab\x90C\xc7Fv@\x00\x00\x00\x00\x00\x00\xf0?/\xe0V^w\x16m@T6j7\x1a\x96z@\x00\x00\x00\x00\x00\x00\xf0?\x022\xfd\x85\xb5\xca`@\xd4@\xbc\xedo\xc5Z@\x00\x00\x00\x00\x00\x00\xf0?\x1c\x94\r\x96iac@\xa3$:~$>a@\x00\x00\x00\x00\x00\x00\xf0?\xc8\x94\xd0\xd3C,a@\x82;\x1e\xa84\xa2q@\x00\x00\x00\x00\x00\x00\xf0?\n>&pC\xdbn@\xb6\xa8\xa6UoIu@\x00\x00\x00\x00\x00\x00\xf0?\x86\x180\xc3\xa8$r@\xb7\xed\x97|\xb6\xcdx@\x00\x00\x00\x00\x00\x00\xf0?\xde.O\xdfmwe@Qp9Db\x0bj@\x00\x00\x00\x00\x00\x00\xf0?\xdcZ\xa8\x01\x08,p@H\xf5T6p\x838@\x00\x00\x00\x00\x00\x00\xf0?\xab(\x8e\x9d\x93\x84\x81@\xa4C\x07\xbb\xbf\xf8K@\x00\x00\x00\x00\x00\x00\xf0?\xfeFhR\x1f>a@\xb5\xa2\x9d\xe2drS@\x00\x00\x00\x00\x00\x00\xf0?\xe8\xc2m\xd2o2w@\xdf\x06s\xfcEPu@\x00\x00\x00\x00\x00\x00\xf0?\x81\x8c\x02\xc7\xc7\xb4f@!\x13\x10\x10\xa9\xa5i@\x00\x00\x00\x00\x00\x00\xf0?/\x12S\xf2EP\x7f@!\xd5vk\xaf\xe8v@\x00\x00\x00\x00\x00\x00\xf0?\xf6\xb1s=c\xa5\x82@\xa0]\r?\xb4<l@\x00\x00\x00\x00\x00\x00\xf0?PK\x07\x08/r\xf12\xb0\x04\x00\x00\xb0\x04\x00\x00PK\x03\x04\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\x00\x10\x00epfl_sample/data/4FB\x0c\x00ZZZZZZZZZZZZ7\xd97\x1a\x90\xc0i@\x88\xe85\x82\xfa|l@\'\xac\xbd\xf1r\xbao@\xb2\xc8\xa3Vn\xfd|@#q\x17\xca\x01)}@\xac]t\xb5\x86T7@~~\xc5\x1c\xdd\xc6s@\xe4\xb9\x86\x99\xd80v@\xcdO\xab\x12\xfe\xbc|@M\x1e\x93\x94\xba`r@\xbfl\x0b\x17Z>x@\xb8/\x168\x14\x80V@G\xc5K\x06:1A@\xd3\x95\xbeE\xb6\x08\\@g\xcd\x97x\xaf\xb6\x80@\xe0"}\x88\xcbTf@\x93\xf7P\xc1\t\x8ct@\t\xa8D\x17+\xd9{@\x88G\xa7\x1av\xefn@\xfd\xb6\x8e\xc4\xc0On@\xb5\xac\x1e\xf6\xd0\x9dy@b\xe2\xeaF\x0e+l@\x85W2\xa2\xbc\x93\x80@D\x97\x00\xf3\x0b4b@Xe!\xf7\xdc\xd6~@C8\x19\xb9\xba\xd5;@\xa0A\x8b\x10M\x81q@-\x83v\x06\xcb\x15m@\x86\x9e\xe0\x1c\x8b\xa7f@\xe0{\xddiBnN@\xba\xbc\xb2\xf8B\x07v@N2\xcb\x92\xd6{N@\x9b\xb2\xde\x19\x8b\x00u@\xb5\xd6\xe6\x1b\xe5\xbay@\x9a\x93\xe74\xa4\x93}@\xe20&G\xf8\x9cZ@\xb2\x0bBI\x01\xfd\x81@\t8\x97\x8b\xab\x9cf@\xa5/ \x054\xaeb@k\xc4U\xdd\xe4\xdei@\xea70\xa3\x16\x9f\x80@\x80\x06b\xe4)\xcb\xbc?\x0ff]\xb4\xb4\xdfk@\xd1\xec\nn\xf6\xfdd@\x07%\xb2Y\xdbDy@\xba\x8c\xe7\xe6\x06\xa1t@u\x8b\x1a\xa0\xe0\xecZ@\x86&FeK\xd4`@\xe2\xaa\xc5l)\xd4}@\xf0\xe6\xbdV\x0f(o@\xf7kp\x88\xbd3\x80@\xdb\xc0\xf5\xab\xdd\xfbh@!\x87\xa4\xb9\xc0\xe0i@H\x1aL\x95\x7fEg@\xb1\xc0\xa1E\xce\x14Q@d\x17\xa6\xdb\xb6\xe0o@\x9e\x15\x8a5\xa1Pz@\x1a\xef(\xd8\xee\x99y@\x98\xb0\xb0T\xcb\xe7w@\xb6V\xe2\xb2\xf4\xa0j@\t\xe4\x074\xa0\xa1~@\xc5\xa7\xe3\xd5\xd6\xf4u@\xbd\x9cv+;Qk@\x11PU\x9a~\x88F@j\xc4\xebjTru@\xb0\xf4\x05\x01}[c@\x08\x05\xdaX\xcfrY@\xbd\xb4\xce:\x9fAM@(^v~\xcc\x9a_@~\xe4\xe2\xd9K\xe2q@d\xe8\xcdv\xf6\x04t@\x8ab\x90C\xc7Fv@/\xe0V^w\x16m@T6j7\x1a\x96z@\x022\xfd\x85\xb5\xca`@\xd4@\xbc\xedo\xc5Z@\x1c\x94\r\x96iac@\xa3$:~$>a@\xc8\x94\xd0\xd3C,a@\x82;\x1e\xa84\xa2q@\n>&pC\xdbn@\xb6\xa8\xa6UoIu@\x86\x180\xc3\xa8$r@\xb7\xed\x97|\xb6\xcdx@\xde.O\xdfmwe@Qp9Db\x0bj@\xdcZ\xa8\x01\x08,p@H\xf5T6p\x838@\xab(\x8e\x9d\x93\x84\x81@\xa4C\x07\xbb\xbf\xf8K@\xfeFhR\x1f>a@\xb5\xa2\x9d\xe2drS@\xe8\xc2m\xd2o2w@\xdf\x06s\xfcEPu@\x81\x8c\x02\xc7\xc7\xb4f@!\x13\x10\x10\xa9\xa5i@/\x12S\xf2EP\x7f@!\xd5vk\xaf\xe8v@\xf6\xb1s=c\xa5\x82@\xa0]\r?\xb4<l@PK\x07\x08;\x90\x95\x1f \x03\x00\x00 \x03\x00\x00PK\x03\x04\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\x00 \x00epfl_sample/data/5FB\x1c\x00ZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\xb0e\x0b\x8e\x938\xe9\xbf@X\x87\xe6\x1e\x1c\xbe\xbf\xd6E\xdf\\ \xd1\xf1\xbf\xc2|\'8\xf0B\xfd\xbfe\x17\'\x12\xe9\xd2\xf0? \xf5\xb1H\x93\xe7\xba\xbf\x9c\x9c#\xedMr\xfd?t\x1cH\x9c\xbb\xeb\xa8?\x0e\xf3\x17]v\n\xe1\xbf\\\x8a\xb4\xe2\'Y\xeb\xbfB\x17\xdb\xc4\xead\xe9?p|3\xc4\xf1#\xa9\xbfL\xaf\xd7e1P\xe4?M\xe3\xf6<MS\xf1?\x8c\x9b\x8bd\x19J\x01@\xff\xbeUGR\x9a\xf7?\xdcz \xcef\x8f\xe6\xbf!\x17\xa2\x9e\x0c\n\xee?\xe0y\x93\x12{\xa1\xec\xbf\xae|\xf7Y\xbe\x0f\xef\xbf)T?\x95\xc2\xe2\x02\xc0\xa3\xd7N\xf7\xb4\x8c\xef?\\\xe9\xa2\x9c\x1f)\xf9?A\xd2`\xe3\'\x86\xf6\xbfz\nvI\x12\xa5\xf5\xbfG\xdc]E\xe6\xf9\xf6?\x9c\xba\x9f4\x943\xf0?\x03\x93\xa1\x8d\xf9!\xe3\xbf\x80\xfd\x13R\x16\x1c\x83\xbf\x84D\x9evU\xeb\xe4\xbf\xe50\xed\x80\xc5\xb6\xe3?\x9b\x92/\xd8\x82\x96\xd5?\x92\xe5\x85\xb6\xc3\x9c\xf2?b\x88+\xac*\xfc\xf9?g\xf1@\xce0\xd8\xf0?\xb4k\xe1\xd0\x9a\xc7\xbb?\xd1\xae\xe2J\xa9_\xf3?\x04"\xa18%\x17\xf3?4w+\xd4uD\x03\xc0r\x0e\x97i#a\xd8\xbf\xb5\xccX\x80.\xfc\xdf\xbf\xb8\xb8Na\x8ep\xf0?\xeb\x12\x83@\xb0\x00\xce?/\xa1v\x07\xd9@\x04\xc0\x0b\x87y\xf1\x03~\xe3?=!\xc4<_[\xf7?\x86\xa8h+\xd3*\xf5\xbfH\xc8\xa5\x94LS\xeb?\xee\xa0>\x9ez-\xf4\xbf\xe2\x02\xc0Q\x83\x1a\xf3?\xa4\x89;\xbd\xbc\xc3\xf7?\xd67\\4\x858\xfd?Y\xfa\x04\xec\x1e\xb7\xcf?JS\xe0\x1c\x8bi\xe6?\xfc\x9eT\xa6-a\xf4?\x80\xb4\xce2\xfaQ\xfa?\xf4\xb0XH\xd7\xe5\xf0\xbf\x1b\xd9\xb7\xe1\x02\x7f\xea\xbf.\x1a\xca7w\xc0\x00\xc0:.\x9b\xaf\xd1p\xf3?vz\xdd\x90\xc1\xcd\x04@\x94G\xf4\xef\xe7c\xdb?\xc48\x065\x8b\x9e\xd8\xbf\xf6\xd2\xd8\x1c9\x19E\xbf;DCv\xc0\x92\xeb\xbf[\x88\xf5\xf9\xd5\xd8\xd6\xbf\x90j\xdf\x06C\xe2\xd1\xbf\x1a\xfa}w\xa4\x9f\xfa?\x18`\x9d2\x1e#\xf0\xbf[\x8e6\x94\x83\xcc\xe4\xbf\xda4W))6\xe8\xbf\x96\xf4`lN\xce\xfd\xbf\x17\xa4v\\\xa9\xe8\xe6?\xa8Y\xab\xa1g\xdb\xf2?\x90\xeb\xbb\x1ds?\xce\xbfO\x05\x02\xcb\x08H\xea?\x80\x14\x93\x921\xba\xf8?-\x96\xb8\x01\x03\x0c\xf8\xbf\xf0\xa8z\x18\x81\x19\xdd\xbfDR\xba\xd9\x1e\xdd\xf7\xbf%t~\xd0s\x83\xf1?D\xd4(\x17\xa1\\\xf5\xbf\xf0\t\xad\x07S7\xb7\xbf\xf9\x9d\xba\\u4\x01\xc0\xfd\xd8\x15\x0e\xa6\x88\xe8\xbf\xfa\xb2_\xe3\xccL\xfd?\x1a\x8d\xb0\xe6QZ\xc9?\xbb\xb3\r\xa6\xbf\xf5\xdd?\xcf\xf5U+\xf0.\xcc?\xf8\xf7Mt\xb0-\xe3?\x0c\x88-?\xc0\\\xd6?\x1b\xf4\xad>\x83\xfa\xfd?zr\xe4z\xf0\x1d\xf5?\xbcL:6\x16\xcb\xe2?>\xf8\xe6)\x08_\x03\xc0\x89\x8e\x816^ \xe9?x?\xf5ai]\xe8?f8\x07\x88\xb8\xae\xeb\xbfn\x16\xa1@\x8e\xa6\xf8?c\x9e\x8a\x18\xcc\x8a\xc3\xbf\xe78Ut\xa7\xde\x03\xc0lNY\xdbDB\xdc\xbf[\x8c\xccT\x8e.\xfb\xbfX\x9b\x1a\x82M\x00\xea\xbf\xa2\xf6\x9e\x17\x82\x06\xb5?\x01\xa6\xfco\xca5\xe6\xbf9\xb3\x12\x7f\xdfK\xe0?\x10d\xedEI\xf1\xf2?\xc3\x1b\xd1\x8f\xbc\x15\xfa\xbf[\x96\x92\x1c\x00}\xe2?\xf4X\x10t\x82\x0e\xd9?r\xaden \x1e\xe0\xbf\xbeZZ\x80\xe4\x8b\xfb\xbf\x8b\xbeT\xf0/\xdc\xe1\xbf\x7f\xd8o\xe6~\x06\xe0\xbf\x01\x86::\x8an\xe6\xbf\x80\x1e5\xd0\x9a\xe2\xfa\xbf8\x96lc\xa5\x98\xf8\xbf)z\xfa`\x96\xf0\xf2\xbf\xec\x85\x1d\xd4@\xb5\xe7?\x81\xd9P\xc8~\x95\xf3\xbf\x05K\x88\xf3qs\xcb?W\x7f\x1cq\xbc\x0e\xd2?Z\xfa\xae\xfc\xc7\xfe\xf5\xbfp\x04\x03BO\x86\xed?\xb3\xe9\x83d\xa9\x13\xcf?\x13Ir9\xdem\xe7\xbf\xbc\xed\x94\xa0\x7f\xd0\xfa\xbf\rQ\xdd\x8d\xa3\xdd\xf3?\xc8+\xc4\xd6\x92D\xe8?\xc04\x0eizS\xf3\xbf\xec\x01\xfd.\xe6!\xe9\xbf\xd2\x16\x9fV`\xd3\x00@\xf6\x87G\xc01N\xed?x\xd7xk\x99{\xe6\xbfb\xbc\x0f\x04\xa8\xe6\xa7?s\x93\xdfjw\xf1\x07\xc0\x12\x13\x8d\x98\xc4\xf8\xe7?L<\x82\xa7\x7f\x94\xdd\xbf\xf2\xdb\xf53\x932\xeb?@a\xca&\x15\x9d\xf2?\x86Kb\x92\x93\x7f\xe5\xbfd\x1ai\xc3c\x0f\xe8\xbf.\x8c\xb4\xa1#\x0f\xe7\xbf\xbd\x82\xc4\x8e\xd9m\xca?\xcaN\xf2kq$\xfe?\xec\xd0c\xc5G~\xe9?#\xb5E\x1b>d\xeb?\x9c\x989\xe2\xaa\xfc\xff?\xbd*\x91Zi\xbd\xf9\xbfPK\x07\x08\xc7\xdc!5\xb0\x04\x00\x00\xb0\x04\x00\x00PK\x03\x04\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\x00\x10\x00epfl_sample/data/6FB\x0c\x00ZZZZZZZZZZZZ \x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x01\x00\x00\x00\x00\x00\x00\xf0\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00PK\x07\x08\xa2\xb6\x04\xb2H\x00\x00\x00H\x00\x00\x00PK\x03\x04\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\x008\x00epfl_sample/data/7FB4\x00ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ,\xb8\xb1\x07[\xc8\xe5?{\x08\xdc\xc2\xa1b\xe6?k\xa0\xcd\x19%\xd5\xcb?\x00\x00\x00\x00\x00\x00\x00\x005-\xf6 yX\xe7\xbf\xd3D\x83a\'\xdb\xe3?#\xebJ\xdc\x9ch\xd2?\x00\x00\x00\x00\x00\x00\x00\x00UDp\x1dO\xf8\xb0?\x90Vv8\xfc\xae\xd6\xbf\x9aQ\x06G\xec\xd8\xed?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?PK\x07\x08\x04\xc5\x1f\xe8\x80\x00\x00\x00\x80\x00\x00\x00PK\x03\x04\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x13\x00?\x00epfl_sample/versionFB;\x00ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ3\nPK\x07\x08\xd1\x9egU\x02\x00\x00\x00\x02\x00\x00\x00PK\x01\x02\x00\x00\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00\x96c\xe9\x0e\xa8\x02\x00\x00\xa8\x02\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00epfl_sample/data.pklPK\x01\x02\x00\x00\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00\xf1\x1c1\x86\xb0\x04\x00\x00\xb0\x04\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf8\x02\x00\x00epfl_sample/data/0PK\x01\x02\x00\x00\x00\x00\x08\x08\x00\x00\x00\x00\x00\x005\x80y\x04\xb0\x04\x00\x00\xb0\x04\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00epfl_sample/data/1PK\x01\x02\x00\x00\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00\xa3\xd5\xe4\x82 \x03\x00\x00 \x03\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\r\x00\x00epfl_sample/data/2PK\x01\x02\x00\x00\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00/r\xf12\xb0\x04\x00\x00\xb0\x04\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00p\x10\x00\x00epfl_sample/data/3PK\x01\x02\x00\x00\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00;\x90\x95\x1f \x03\x00\x00 \x03\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x15\x00\x00epfl_sample/data/4PK\x01\x02\x00\x00\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00\xc7\xdc!5\xb0\x04\x00\x00\xb0\x04\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0\x18\x00\x00epfl_sample/data/5PK\x01\x02\x00\x00\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00\xa2\xb6\x04\xb2H\x00\x00\x00H\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00epfl_sample/data/6PK\x01\x02\x00\x00\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00\x04\xc5\x1f\xe8\x80\x00\x00\x00\x80\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x98\x1e\x00\x00epfl_sample/data/7PK\x01\x02\x00\x00\x00\x00\x08\x08\x00\x00\x00\x00\x00\x00\xd1\x9egU\x02\x00\x00\x00\x02\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x90\x1f\x00\x00epfl_sample/versionPK\x06\x06,\x00\x00\x00\x00\x00\x00\x00\x1e\x03-\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x83\x02\x00\x00\x00\x00\x00\x00\x12 \x00\x00\x00\x00\x00\x00PK\x06\x07\x00\x00\x00\x00\x95"\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00PK\x05\x06\x00\x00\x00\x00\n\x00\n\x00\x83\x02\x00\x00\x12 \x00\x00\x00\x00'

def load_data():
    keys = ['camPts', 'Ximg_true', 'imgPts_true', 'Ximg', 'imgPts', 'objPts']
    res = torch.load(io.BytesIO(sample_binary))

    for key in keys:
        res[key] = res[key].squeeze(-1)
        # make a copy of the data for batch size of 2
        res[key] = res[key].unsqueeze(0)[[0, 0, ]]

    res['camMat'] = res['camMat'].unsqueeze(0)[[0, 0, ]].to(res['objPts'])
    res['Rt'] = res['Rt'].unsqueeze(0)[[0, 0, ]]
    return res


def rmse_rot(pred, gt):
    diff = pred - gt
    f_norm = torch.norm(diff, dim=(1, 2))
    return f_norm.mean()


def rmse_t(pred, gt):
    diff = pred - gt
    norm = diff ** 2
    norm = torch.sum(norm, dim=1)
    return norm.mean()


class TestEPnP:
    def test_epnp_5pts(self):
        # TODO: Implement this
        return

    def test_epnp_10pts(self):
        # TODO: Implement this
        return

    def test_epnp_random(self):
        def solution_opencv(obj_pts, img_pts, intrinsics):
            distortion = None
            # results given by cv2.solvePnP(obj_pts, img_pts, intrinsics, distortion, flags=cv2.SOLVEPNP_EPNP)
            rvec = torch.tensor([[-0.37279579],
                             [0.09247041],
                             [-0.82372009]])
            t = torch.tensor([[-0.07126862],
                          [-0.22845308],
                          [6.92614964]])
            rot = torch.tensor([[0.67947332, 0.69882627, 0.22351252],
                            [-0.73099025, 0.61862761, 0.28801584],
                            [0.06300202, -0.35908455, 0.93117615]])
            Rt = torch.concatenate((rot.reshape((3, 3)), t.reshape((3, 1))), dim=1)

            obj_pts = obj_pts[None].to(torch.float32)
            img_pts = img_pts[None].to(torch.float32)
            intrinsics = intrinsics[None].to(torch.float32)
            Rt = Rt[None]

            rot = Rt[:, :3, :3][None]
            t = Rt[:, :3, 3][None]

            error = pp.module.EPnP.reprojection_error(obj_pts,
                                                      img_pts,
                                                      intrinsics,
                                                      Rt, )
            return dict(Rt=Rt, error=error, R=rot, T=t)

        data = load_data()

        # instantiate epnp
        epnp = pp.module.EPnP(refinement_optimizer=False)
        solution = epnp.forward(data['objPts'], data['imgPts'], data['camMat'])
        solution_ref = solution_opencv(data['objPts'][0],
                                       data['imgPts'][0],
                                       data['camMat'][0])
        gt_rot = data['Rt'][:, :3, :3]
        gt_t = data['Rt'][:, :3, 3]

        print("Pypose EPnP solution, rmse of R:", rmse_rot(solution['R'], gt_rot))
        print("Pypose EPnP solution, rmse of t:", rmse_t(solution['t'], gt_t))

        print("OpenCV EPnP solution, rmse of R:", rmse_rot(solution_ref['R'], gt_rot))
        print("OpenCV EPnP solution, rmse of t:", rmse_t(solution_ref['T'], gt_t))


# CPnP: a consistent PnP solver
# Inputs: s - a 3×n matrix whose i-th column is the coordinates (in the world frame) of the i-th 3D point
# Psens_2D - a 2×n matrix whose i-th column is the coordinates of the 2D projection of the i-th 3D point
# fx, fy, u0, v0 - intrinsics of the camera, corresponding to the intrinsic matrix K=[fx 0 u0;0 fy v0;0 0 1]

# Outputs: R - the estimate of the rotation matrix in the first step
# t - the estimate of the translation vector in the first step
# R_GN - the refined estimate of the rotation matrix with Gauss-Newton iterations
# t_GN - the refined estimate of the translation vector with Gauss-Newton iterations
# Copyright <2022> <Guangyang Zeng, Shiyu Chen, Biqiang Mu, Guodong Shi, Junfeng Wu>
# Guangyang Zeng, SLAMLab-CUHKSZ, September 2022
# zengguangyang@cuhk.edu.cn, https://github.com/SLAMLab-CUHKSZ
# paper link: https://arxiv.org/abs/2209.05824


# from numpy import linalg
# from scipy.linalg import expm, eigh, eig, svd

#
# def CPnP(s, Psens_2D, fx, fy, u0, v0):
#     """
#     This is the official implementation
#     """
#     N = s.shape[1]
#     bar_s = np.mean(s, axis=1).reshape(3, 1)
#     Psens_2D = Psens_2D - np.array([[u0], [v0]])
#     obs = Psens_2D.reshape((-1, 1), order="F")
#     pesi = np.zeros((2 * N, 11))
#     G = np.ones((2 * N, 1))
#     W = np.diag([fx, fy])
#     M = np.hstack([np.kron(bar_s.T, np.ones((2 * N, 1))) - np.kron(s.T, np.ones((2, 1))), np.zeros((2 * N, 8))])
#
#     for k in range(N):
#         pesi[[2 * k], :] = np.hstack(
#             [-(s[0, k] - bar_s[0]) * obs[2 * k], -(s[1, k] - bar_s[1]) * obs[2 * k], -(s[2, k] - bar_s[2]) * obs[2 * k],
#              (fx * s[:, [k]]).T.tolist()[0], fx, 0, 0, 0, 0])
#         pesi[[2 * k + 1], :] = np.hstack(
#             [-(s[0, k] - bar_s[0]) * obs[2 * k + 1], -(s[1, k] - bar_s[1]) * obs[2 * k + 1],
#              -(s[2, k] - bar_s[2]) * obs[2 * k + 1], 0, 0, 0, 0, (fy * s[:, [k]]).T.tolist()[0], fy])
#
#     J = np.dot(np.vstack([pesi.T, obs.T]), np.hstack([pesi, obs])) / (2 * N)
#     delta = np.vstack([np.hstack([np.dot(M.T, M), np.dot(M.T, G)]), np.hstack([np.dot(G.T, M), np.dot(G.T, G)])]) / (
#             2 * N)
#
#     w, D = eig(J, delta)
#     sigma_est = min(abs(w))
#
#     est_bias_eli = np.dot(np.linalg.inv((np.dot(pesi.T, pesi) - sigma_est * (np.dot(M.T, M))) / (2 * N)),
#                           (np.dot(pesi.T, obs) - sigma_est * np.dot(M.T, G)) / (2 * N))
#     bias_eli_rotation = np.vstack([est_bias_eli[3:6].T, est_bias_eli[7:10].T, est_bias_eli[0:3].T])
#     bias_eli_t = np.hstack([est_bias_eli[6], est_bias_eli[10],
#                             1 - bar_s[0] * est_bias_eli[0] - bar_s[1] * est_bias_eli[1] - bar_s[2] * est_bias_eli[2]]).T
#     normalize_factor = np.linalg.det(bias_eli_rotation) ** (1 / 3)
#     bias_eli_rotation = bias_eli_rotation / normalize_factor
#     t = bias_eli_t / normalize_factor
#
#     U, x, V = svd(bias_eli_rotation)
#     V = V.T
#
#     RR = np.dot(U, np.diag([1, 1, np.linalg.det(np.dot(U, V.T))]))
#     R = np.dot(RR, V.T)
#
#     E = np.array([[1, 0, 0], [0, 1, 0]])
#     WE = np.dot(W, E)
#     e3 = np.array([[0], [0], [1]])
#     J = np.zeros((2 * N, 6))
#
#     g = np.dot(WE, np.dot(R, s) + np.tile(t, N).reshape(N, 3).T)
#     h = np.dot(e3.T, np.dot(R, s) + np.tile(t, N).reshape(N, 3).T)
#
#     f = g / h
#     f = f.reshape((-1, 1), order="F")
#     I3 = np.diag([1, 1, 1])
#
#     for k in range(N):
#         J[[2 * k, 2 * k + 1], :] = np.dot((WE * h[0, k] - g[:, [k]] * e3.T), np.hstack(
#             [s[1, k] * R[:, [2]] - s[2, k] * R[:, [1]], s[2, k] * R[:, [0]] - s[0, k] * R[:, [2]],
#              s[0, k] * R[:, [1]] - s[1, k] * R[:, [0]], I3])) / h[0, k] ** 2
#
#     initial = np.hstack([np.zeros((3)), t.tolist()]).reshape(6, 1)
#     results = initial + np.dot(np.dot(np.linalg.inv(np.dot(J.T, J)), J.T), (obs - f))
#     X_GN = results[0:3]
#     t_GN = results[3:6]
#
#     X_GN = X_GN.reshape(3, )
#
#     Xhat = np.array([
#         [0, -X_GN[2], X_GN[1]],
#         [X_GN[2], 0, -X_GN[0]],
#         [-X_GN[1], X_GN[0], 0]
#     ])
#     R_GN = np.dot(R, expm(Xhat))
#
#     return R, t, R_GN, t_GN
#
#
# class TestCPnP:
#     def cpnp_wrapper(self, data):
#         obj_pts = data["objPts"][0].numpy().T
#         img_pts = data["imgPts"][0].numpy().T
#         intrinsic = data["camMat"][0].numpy().T
#
#         fx, fy, u0, v0 = intrinsic[0, 0], intrinsic[1, 1], intrinsic[0, 2], intrinsic[1, 2]
#         solution_ = CPnP(obj_pts, img_pts, fx, fy, u0, v0)
#         keys = ['R', 't', 'R_GN', 't_GN', ]
#         solution = {key: solution_[i] for i, key in enumerate(keys)}
#         # to torch
#         for key in solution.keys():
#             solution[key] = torch.from_numpy(solution[key])[None, :]
#         return solution
#
#     def test_cpnp_random(self):
#         data = load_data()
#         solution = self.cpnp_wrapper(data)
#         R = solution['R']
#         t = solution['t']
#         R_GN = solution['R_GN']
#         t_GN = solution['t_GN']
#         gt_rot = data['Rt'][:, :3, :3]
#         gt_t = data['Rt'][:, :3, 3]
#
#         print("Official CPnP solution, rmse of R:", rmse_rot(solution['R'], gt_rot))
#         print("Official CPnP solution, rmse of t:", rmse_t(solution['t'], gt_t))
#
#         print("Official CPnP solution w/ GN, rmse of R:", rmse_rot(solution['R_GN'], gt_rot))
#         print("Official CPnP solution w/ GN, rmse of t:", rmse_t(solution['t_GN'].squeeze(-1), gt_t))


if __name__ == "__main__":
    epnp_fixture = TestEPnP()
    epnp_fixture.test_epnp_5pts()
    epnp_fixture.test_epnp_10pts()
    epnp_fixture.test_epnp_random()

    # cpnp_fixture = TestCPnP()
    # cpnp_fixture.test_cpnp_random()
